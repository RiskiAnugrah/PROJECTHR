
@{
    ViewBag.Title = "GRAFIK HASIL TIMBANG SORTIR";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.pathParent = Url.Content("~").Substring(0, Url.Content("~").Length - 1);
}
<head>
    <style>


  .column1 {

  float: left;
    width: 60%;
  padding:10px;
}
   .columnslice1 {
  float: left;
  width: 40%;
  
  padding:10px;

}



        .column2 {
  float: left;
  width: 50%;
  padding:10px;
}

/* Clear floats after the columns */
.row:after {
  content: "";
  display: table;
  clear: both;
}
        .card {
  /* Add shadows to create the "card" effect */
  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
  transition: 0.3s;
}

/* On mouse-over, add a deeper shadow */
.card:hover {
  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);
}

/* Add some padding inside the card container */
.container {
  padding: 2px 16px;
}

@@media screen and (max-width:400px) {
    .column1 {
        width: 100%;
    }
    .columnslice1 {
        width: 100%;
    }
}
@@media (max-width: 576px) {  
  .column1 {
        width: 100%;
    }
    .columnslice1 {
        width: 100%;
    }
}

/* Small devices (landscape phones, 576px and up) */
@@media (min-width: 576px) and (max-width:768px) {  
  .column1 {
        width: 100%;
    }
    .columnslice1 {
        width: 100%;
    }
}
 
/* Medium devices (tablets, 768px and up) The navbar toggle appears at this breakpoint */
@@media (min-width: 768px) and (max-width:992px) {  
  .column1 {
        width: 100%;
    }
    .columnslice1 {
        width: 100%;
    }
}
 
/* Large devices (desktops, 992px and up) */
@@media (min-width: 992px) and (max-width:1200px) { 
  .column1 {
        width: 100%;
    }
    .columnslice1 {
        width: 100%;
    }
}
 
/* Extra large devices (large desktops, 1200px and up) */
@@media (min-width: 1200px) {  
   .column1 {
        width: 100%;
    }
    .columnslice1 {
        width: 100%;
    }
}

    </style>
</head>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.6.0/Chart.min.js" type="text/javascript"></script>

<input type="hidden" id="urlPath" name="urlPath" value="@ViewBag.pathParent" />
<div class="row">
    <div class="column1">
        <div class="card">
            <canvas id="myChart" style="align-content:center; width:70% !important;height:250px !important;"> </canvas>
        </div>
    </div>
   
</div>
<div class="row">
    <div class="column1">
        <div class="card">
            <canvas id="myChart2" style="height:40vh; width:50vw"> </canvas>
        </div>
    </div>
   

</div>
<div style="height:300px"></div>
<script>
    $(document).ready(function () {

        // run the first time; all subsequent calls will take care of themselves
        setTimeout(execute, 5000);
        setTimeout(attendance, 5000);
   
    });

    function monthly() {
        $.ajax({
            type: "POST",
            url: $("#urlPath").val() + "/Chart/MonthlyChart",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (chData) {
                var maxVal = Math.max.apply(null, chData[1]);
                document.getElementById("best").value = maxVal.toString();
                
               
                setTimeout(execute, 5000);
                var randomColorGenerator = function () {
                    return '#' + (Math.random().toString(16) + '0000000').slice(2, 8);
                };
                var ctx = $("#myChart3").get(0).getContext("2d");
                var background_1 = ctx.createLinearGradient(0, 0, 0, 600);
                background_1.addColorStop(0, '#00a0bd');
                background_1.addColorStop(1, '#03e3fc');
                var aData = chData;
                var aLabels = aData[0];
                var aDatasets1 = aData[1];
                var dataT = {
                    labels: aLabels,
                    datasets: [{
                        label: "Hasil Sortir",
                        data: aDatasets1,
                        fill: false,
                        backgroundColor: background_1,
                        borderColor: randomColorGenerator(),
                        borderWidth: 1
                    }]
                };

                var myNewChart = new Chart(ctx, {
                    type: 'line',
                    data: dataT,
                    options: {
                        responsive: true,
                        title: { display: true, text: 'TOTAL HASIL SORTIR BULAN INI'},
                        legend: { position: 'bottom' },
                        scales: {
                            xAxes: [{ gridLines: { display: false }, display: true, scaleLabel: { display: false, labelString: '' } }],
                            yAxes: [{ gridLines: { display: false }, display: true, scaleLabel: { display: false, labelString: '' }, ticks: { stepSize: 1000, beginAtZero: true } }]
                        },
                     
                        animation: {
                            duration: 2,
                            onComplete: function () {
                                var chartInstance = this.chart,
                                    ctx = chartInstance.ctx;
                                ctx.font = Chart.helpers.fontString(Chart.defaults.global.defaultFontSize, Chart.defaults.global.defaultFontStyle, Chart.defaults.global.defaultFontFamily);
                                ctx.textAlign = 'center';
                                ctx.textBaseline = 'bottom';

                                this.data.datasets.forEach(function (dataset, i) {
                                    var meta = chartInstance.controller.getDatasetMeta(i);
                                    meta.data.forEach(function (bar, index) {
                                        var data = dataset.data[index];
                                        ctx.fillText(data, bar._model.x, bar._model.y - 5);
                                    });
                                });
                            }
                        }
                    }
                });
            }
        });

    }

    function execute() {
        $.ajax({
            type: "POST",
            url: $("#urlPath").val() + "/Chart/newChart",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (chData) {
                setTimeout(execute, 5000);
                var randomColorGenerator = function () {
                    return '#' + (Math.random().toString(16) + '0000000').slice(2, 8);
                };
                var ctx = $("#myChart").get(0).getContext("2d");
                var background_1 = ctx.createLinearGradient(0, 0, 0, 600);
                background_1.addColorStop(0, 'green');
                background_1.addColorStop(1, '#03e3fc');
                var aData = chData;
                var aLabels = aData[0];
                var aDatasets1 = aData[1];
                var dataT = {
                    labels: aLabels,
                    datasets: [{
                        label: "Hasil Sortir",
                        data: aDatasets1,
                        fill: false,
                        backgroundColor: background_1,
                        borderColor: randomColorGenerator(),
                        borderWidth: 1
                    }]
                };
             
                var myNewChart = new Chart(ctx, {
                    type: 'bar',
                    data: dataT,
                    options: {
                        responsive: true,
                        title: { display: true, text: 'PEROLEHAN HASIL PRODUKSI SORTIR HARI INI' },
                        legend: { position: 'bottom' },
                        scales: {
                            xAxes: [{ gridLines: { display: false }, display: true, scaleLabel: { display: false, labelString: '' } }],
                            yAxes: [{ gridLines: { display: false }, display: true, scaleLabel: { display: false, labelString: '' }, ticks: { stepSize: 50, beginAtZero: true } }]
                        },
                        animation: {
                            duration: 2,
                            onComplete: function () {
                                var chartInstance = this.chart,
                                    ctx = chartInstance.ctx;
                                ctx.font = Chart.helpers.fontString(Chart.defaults.global.defaultFontSize, Chart.defaults.global.defaultFontStyle, Chart.defaults.global.defaultFontFamily);
                                ctx.textAlign = 'center';
                                ctx.textBaseline = 'bottom';

                                this.data.datasets.forEach(function (dataset, i) {
                                    var meta = chartInstance.controller.getDatasetMeta(i);
                                    meta.data.forEach(function (bar, index) {
                                        var data = dataset.data[index];
                                        ctx.fillText(data, bar._model.x, bar._model.y - 5);
                                    });
                                });
                            }
                        }
                    }
                });
            }
        });

    }

    function attendance() {
        $.ajax({
            type: "POST",
            url: $("#urlPath").val() + "/Chart/AttendanceChart",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (chData) {
                setTimeout(attendance, 5000);
                var randomColorGenerator = function () {
                    return '#' + (Math.random().toString(16) + '0000000').slice(2, 8);
                };
                var ctx = $("#myChart2").get(0).getContext("2d");
                var background_1 = ctx.createLinearGradient(0, 0, 0, 600);
                background_1.addColorStop(0, 'green');
                background_1.addColorStop(1, '#03e9fc');
                var aData = chData;
                var aLabels = aData[0];
                var aDatasets1 = aData[1];
                var dataT = {
                    labels: aLabels,
                    datasets: [{
                        borderColor: 'rgb(75, 192, 192)',
                
                        label: "Jumlah Karyawan Hadir",
                        data: aDatasets1,
                        fill: false,
                     
                        borderWidth: 3
                    }]
                };

                var myNewChart = new Chart(ctx, {
                    type: 'line',
                    data: dataT,
                    options: {
                        title: { display: true, text: 'MANPOWER' },

                        elements: {
                            bar: {
                                borderWidth: 2,
                            }
                        },
                        responsive: true,
                        title: { display: true, text: 'KEHADIRAN KARYAWAN HARI INI' },
                        legend: { position: 'bottom' },
                        plugins: {
                            datalabels: {
                                display: true,
                                align: 'bottom',
                                backgroundColor: '#ccc',
                                borderRadius: 3,
                                font: {
                                    size: 18,
                                }
                            },
                        },
                        animation: {
                            duration: 2,
                            onComplete: function () {
                                var chartInstance = this.chart,
                                    ctx = chartInstance.ctx;
                                ctx.font = Chart.helpers.fontString(Chart.defaults.global.defaultFontSize, Chart.defaults.global.defaultFontStyle, Chart.defaults.global.defaultFontFamily);
                                ctx.textAlign = 'center';
                                ctx.textBaseline = 'bottom';

                                this.data.datasets.forEach(function (dataset, i) {
                                    var meta = chartInstance.controller.getDatasetMeta(i);
                                    meta.data.forEach(function (bar, index) {
                                        var data = dataset.data[index];
                                        ctx.fillText(data, bar._model.x, bar._model.y - 5);
                                    });
                                });
                            }
                        }
                    
                       
                      
                       
                    }
                });
            }
        });

    }
</script>  